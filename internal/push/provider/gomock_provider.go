// Code generated by MockGen. DO NOT EDIT.
// Source: allaboutapps.dev/aw/go-starter/internal/push (interfaces: Provider)

// Package provider is a generated GoMock package.
package provider

import (
	reflect "reflect"

	push "allaboutapps.dev/aw/go-starter/internal/push"
	gomock "github.com/golang/mock/gomock"
)

// GomockProvider is a mock of Provider interface.
type GomockProvider struct {
	ctrl     *gomock.Controller
	recorder *GomockProviderMockRecorder
}

// GomockProviderMockRecorder is the mock recorder for GomockProvider.
type GomockProviderMockRecorder struct {
	mock *GomockProvider
}

// NewGomockProvider creates a new mock instance.
func NewGomockProvider(ctrl *gomock.Controller) *GomockProvider {
	mock := &GomockProvider{ctrl: ctrl}
	mock.recorder = &GomockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *GomockProvider) EXPECT() *GomockProviderMockRecorder {
	return m.recorder
}

// GetProviderType mocks base method.
func (m *GomockProvider) GetProviderType() push.ProviderType {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProviderType")
	ret0, _ := ret[0].(push.ProviderType)
	return ret0
}

// GetProviderType indicates an expected call of GetProviderType.
func (mr *GomockProviderMockRecorder) GetProviderType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProviderType", reflect.TypeOf((*GomockProvider)(nil).GetProviderType))
}

// Send mocks base method.
func (m *GomockProvider) Send(arg0, arg1, arg2 string) push.ProviderSendResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0, arg1, arg2)
	ret0, _ := ret[0].(push.ProviderSendResponse)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *GomockProviderMockRecorder) Send(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*GomockProvider)(nil).Send), arg0, arg1, arg2)
}

// SendMulticast mocks base method.
func (m *GomockProvider) SendMulticast(arg0 []string, arg1, arg2 string) []push.ProviderSendResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMulticast", arg0, arg1, arg2)
	ret0, _ := ret[0].([]push.ProviderSendResponse)
	return ret0
}

// SendMulticast indicates an expected call of SendMulticast.
func (mr *GomockProviderMockRecorder) SendMulticast(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMulticast", reflect.TypeOf((*GomockProvider)(nil).SendMulticast), arg0, arg1, arg2)
}
